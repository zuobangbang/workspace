import keras
import numpy as np
import matplotlib.pyplot as plt
# Sequential按顺序构成的模型
from keras.models import Sequential
# Dense全连接层
from keras.layers import Dense, Activation
# 优化器：随机梯度下降
from keras.optimizers import SGD
# 骑行距离与骑行次数
# xx=[840, 420, 1410, 3350, 1080, 2740, 1760, 4420, 4690, 1530, 410, 850, 260, 1360, 1380, 1220, 550, 5360, 210, 120, 700, 110, 1860, 2370, 460, 1550, 1650, 100, 970, 670, 2210, 1180, 1370, 2200, 2440, 2250, 1600, 2890, 2230, 2700, 370, 1170, 290, 430, 720, 600, 730, 4530, 140, 360, 540, 1700, 2610, 240, 880, 1400, 2430, 2290, 1240, 860, 4490, 660, 590, 3970, 340, 1040, 2710, 790, 2150, 3530, 450, 910, 2060, 2670, 1190, 1390, 470, 1000, 150, 870, 900, 1950, 170, 1900, 830, 510, 480, 1670, 230, 520, 4070, 200, 300, 160, 180, 310, 1120, 2170, 2450, 1580, 250, 440, 2880, 3610, 270, 1510, 1020, 3770, 2130, 3330, 990, 1060, 330, 1230, 3320, 1420, 3590, 1310, 1160, 760, 1110, 3110, 3120, 770, 3890, 1790, 2930, 1150, 1070, 1810, 2320, 1480, 1030, 2300, 2630, 1260, 1850, 2520, 810, 580, 780, 500, 920, 1540, 2110, 4760, 3510, 620, 2690, 1250, 1210, 940, 570, 2340, 710, 380, 2180, 130, 220, 1470, 3880, 2410, 640, 1660, 2470, 1430, 1100, 2580, 3210, 5190, 1330, 2010, 2310, 750, 1200, 320, 2050, 1620, 610, 1870, 950, 1050, 2870, 2190, 3520, 630, 1270, 530, 1610, 690, 1640, 1930, 1130, 280, 4710, 2350, 1990, 400, 190, 1770, 2950, 1320, 1750, 490, 2420, 2480, 820, 4520, 3990, 1590, 1890, 3650, 4750, 5440, 1960, 2590, 3160, 2380, 2720, 1350, 3170, 2000, 1680, 2820, 1720, 980, 1280, 960, 2790, 890, 1300, 1010, 3340, 2030, 3140, 740, 1690, 1980, 350, 650, 1940, 390, 2040, 2860, 3200, 1090, 2850, 930, 1910, 2100, 1520, 2530, 2140, 2560, 1570, 2330, 560, 3230, 3750, 4930, 3280, 3300, 1490, 1730, 1970, 2460, 2260, 2800, 2750, 1710, 1780, 1140, 2160, 2510, 4150, 4140, 2280, 2490, 5900, 1740, 2020, 1560, 1840, 1630, 800, 3460, 1290, 1460, 5720, 5240, 2640, 3310, 4090, 2830, 4810, 3260, 3180, 2770, 3050, 3220, 2760, 5010, 4270, 5510, 3190, 2600, 1820, 4300, 2240, 1880, 4800, 5610, 3070, 2650, 3780, 1500, 4280, 3080, 3830, 4410, 3850, 5040, 2970, 4380, 2220, 1340, 4450, 5650, 3380, 5630, 3710, 5470, 2540, 3540, 2390, 2120, 3130, 2660, 1920, 4230, 3870, 3660, 5490, 3840, 4340, 4000, 2680, 2360, 2920, 680, 4170, 2090, 1800, 4660, 2500, 4430, 5210, 3060, 5410, 4360, 3940, 1440, 4080, 5970, 3440, 2080, 4020, 4620, 3390, 1830, 2990, 5670, 4250, 3860, 3430, 4060, 3490, 1450, 5030, 4560, 3000, 2940, 4830, 5070, 2810, 4120, 4550, 4610, 2620, 2270, 5740, 2070, 5250, 3450, 4130, 5950, 3720, 4460, 4600, 5760, 3150, 4480, 5570, 2400, 5390, 4820, 5420, 3030, 3620, 2570, 3950, 3930, 3790, 5580, 3810, 3020, 4500, 5640, 4870, 4100, 3670, 4040, 3820, 3640, 2550, 5330, 3980, 4590, 3560, 3470, 4110, 5320, 2780, 3360, 3600, 5310, 3040, 3290, 3580, 3010, 3250, 5560, 4190, 4630, 2840, 3960, 2980, 2900, 3400, 5780, 5690, 5170, 5870, 4770, 5120, 3760, 5590, 2910, 5660, 3700, 3690, 3550, 3410, 2960, 4700, 3480, 4840, 4200, 4900, 3240, 4670, 5220, 3630, 4960, 4570, 3680, 4330, 4470, 4050, 4970, 4240, 5300, 5820, 4260, 4580, 4780, 3570, 4850, 5450, 3090, 5850, 4310, 5750, 4880, 3900, 3370, 4640, 5260, 4740, 5880, 5060, 3740, 4720, 4320, 4160, 4390, 5370, 2730, 5770, 4860, 3100, 5990, 4010, 5980, 5550, 5520, 3420, 5090, 4940, 4210, 4350, 5800, 3270, 5000, 5110, 4680, 4790, 4290, 3800, 5860, 5080, 5400, 5270, 4180, 5280, 5200, 4540, 4400, 4030, 4730, 3910, 5180, 5020, 4650, 3500, 5460, 4220, 4980, 5380, 5130, 5600, 4440, 5500, 5910, 4510, 3730]
# yy=[85, 89, 42, 10, 78, 13, 32, 3, 3, 39, 75, 64, 72, 53, 47, 48, 74, 4, 102, 179, 89, 177, 36, 11, 78, 46, 48, 143, 77, 84, 21, 73, 44, 20, 20, 24, 41, 6, 17, 13, 73, 68, 62, 81, 82, 84, 93, 3, 103, 71, 86, 42, 17, 102, 85, 52, 24, 16, 56, 91, 4, 74, 67, 9, 74, 70, 16, 70, 20, 8, 78, 80, 29, 13, 60, 56, 76, 68, 146, 79, 89, 36, 112, 28, 86, 78, 99, 40, 83, 81, 6, 94, 79, 108, 101, 84, 58, 14, 14, 33, 96, 76, 9, 6, 72, 40, 71, 4, 18, 5, 67, 57, 87, 60, 7, 48, 7, 51, 64, 87, 66, 11, 12, 73, 3, 31, 8, 61, 60, 33, 20, 52, 83, 19, 16, 56, 35, 16, 86, 79, 81, 81, 87, 36, 21, 5, 8, 91, 16, 71, 70, 70, 75, 22, 75, 81, 25, 123, 80, 55, 8, 16, 103, 42, 15, 52, 60, 15, 12, 3, 52, 21, 26, 98, 55, 97, 25, 41, 93, 29, 88, 81, 12, 27, 7, 74, 46, 86, 44, 77, 25, 36, 57, 80, 4, 26, 32, 78, 132, 33, 12, 59, 34, 76, 21, 18, 91, 5, 11, 32, 38, 3, 6, 3, 26, 17, 12, 16, 19, 48, 7, 35, 36, 11, 42, 70, 57, 68, 22, 61, 44, 64, 5, 22, 10, 81, 25, 25, 72, 86, 32, 80, 24, 12, 9, 75, 10, 84, 35, 29, 39, 14, 27, 15, 23, 18, 83, 7, 6, 2, 11, 12, 43, 46, 23, 19, 16, 20, 16, 37, 37, 58, 17, 17, 8, 2, 23, 10, 3, 40, 37, 37, 32, 49, 75, 5, 59, 50, 1, 2, 15, 11, 2, 16, 3, 9, 8, 17, 15, 17, 13, 2, 3, 2, 12, 25, 38, 2, 17, 33, 4, 2, 5, 13, 6, 34, 8, 14, 6, 2, 4, 4, 15, 4, 20, 43, 3, 1, 6, 2, 8, 1, 19, 7, 20, 21, 6, 12, 32, 1, 5, 4, 4, 6, 3, 4, 14, 10, 13, 69, 6, 20, 34, 5, 18, 4, 2, 10, 1, 4, 3, 48, 6, 4, 4, 23, 5, 2, 7, 26, 7, 1, 5, 2, 8, 7, 7, 47, 4, 2, 5, 7, 4, 2, 16, 4, 3, 2, 18, 19, 2, 20, 4, 11, 5, 2, 8, 4, 3, 3, 13, 3, 3, 17, 1, 2, 3, 10, 9, 15, 4, 7, 4, 2, 7, 9, 3, 2, 1, 5, 6, 5, 5, 3, 14, 1, 2, 2, 5, 10, 3, 2, 7, 6, 4, 1, 7, 12, 4, 14, 6, 2, 4, 3, 12, 10, 5, 13, 5, 2, 2, 3, 2, 4, 4, 4, 3, 9, 1, 4, 7, 3, 6, 10, 3, 7, 3, 2, 3, 6, 3, 3, 4, 2, 3, 4, 5, 2, 5, 5, 2, 1, 1, 6, 3, 3, 5, 10, 3, 6, 1, 2, 1, 3, 2, 4, 2, 1, 3, 3, 1, 2, 2, 2, 2, 2, 1, 8, 1, 1, 11, 1, 1, 1, 1, 2, 5, 1, 2, 2, 3, 4, 6, 1, 1, 3, 2, 1, 3, 2, 1, 1, 4, 1, 2, 3, 2, 3, 3, 1, 2, 1, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
# 骑行时间与骑行次数
xx=[200, 100, 10, 335, 805, 15, 260, 655, 420, 1060, 1125, 365, 205, 60, 325, 330, 290, 130, 295, 1285, 50, 25, 170, 165, 445, 570, 1475, 110, 370, 395, 230, 160, 530, 280, 525, 585, 540, 380, 695, 535, 650, 90, 70, 140, 175, 1085, 30, 20, 85, 405, 625, 55, 210, 580, 550, 1075, 155, 950, 80, 250, 190, 515, 845, 105, 215, 385, 495, 640, 285, 240, 35, 470, 40, 455, 195, 120, 115, 400, 125, 975, 45, 75, 270, 1450, 520, 690, 865, 65, 245, 905, 510, 795, 235, 255, 340, 860, 315, 275, 180, 265, 745, 750, 185, 935, 430, 700, 435, 555, 355, 630, 300, 145, 605, 135, 220, 505, 1140, 840, 150, 645, 225, 560, 1750, 1625, 350, 930, 575, 590, 615, 770, 1245, 320, 480, 490, 390, 450, 310, 305, 460, 1130, 95, 425, 710, 595, 955, 875, 1305, 620, 760, 675, 410, 670, 800, 1665, 485, 475, 465, 685, 765, 360, 375, 500, 775, 900, 1180, 785, 790, 415, 660, 600, 995, 545, 1415, 1540, 440, 830, 1375, 1260, 635, 980, 680, 1155, 780, 2185, 665, 1905, 730, 1200, 1025, 1320, 1030, 1150, 1345, 735, 740, 920, 1055, 1525, 1210, 1050, 1545, 1070, 1355, 810, 1350, 890, 1310, 610, 850, 1015, 1315, 1040, 960, 565, 1000, 1115, 1250, 1295, 1045, 945, 345, 1430, 825, 1120, 965, 1110, 815, 715, 1360, 1020, 925, 820, 835, 1205, 1095, 1470, 720, 705, 1160, 1215, 985, 1090, 1105, 1640, 990, 1425, 1630, 1380, 755, 1335, 1300, 725, 870, 940, 910, 1340, 915, 1655, 1080, 1170, 1690, 880, 970, 2005, 1280, 1695, 1100, 855, 1275, 1005, 1385, 1365, 1240, 1410, 1145, 1230, 1585, 885, 1940, 1010, 1175, 2505, 1190, 1035, 1735, 1440, 1650, 895, 1195, 1515, 2075, 1065, 1480, 1270, 1395, 1505, 1165, 1405, 1495, 1810, 1500, 1770, 1580, 1265, 1460, 2450, 1510, 1135, 1680, 1435, 1330, 1325, 1220, 1185, 1755, 1890, 1520, 1390, 1610, 1225, 1620, 1645, 1600, 1790, 1840, 2095, 2315, 2275, 1530, 1255, 1925, 2150, 1670, 2140, 1965, 1290, 1860, 1605, 1455, 1490, 1465, 1725, 1900, 1685]
yy=[170, 186, 781, 97, 14, 603, 156, 22, 69, 6, 6, 83, 152, 185, 101, 104, 119, 172, 122, 5, 192, 346, 167, 153, 66, 31, 1, 173, 89, 84, 156, 165, 47, 148, 47, 36, 43, 74, 22, 32, 35, 168, 151, 158, 180, 8, 287, 456, 146, 73, 40, 178, 170, 47, 40, 8, 192, 14, 162, 160, 154, 45, 15, 152, 177, 88, 49, 28, 125, 142, 271, 53, 221, 66, 190, 163, 171, 83, 177, 12, 234, 188, 117, 3, 41, 20, 13, 161, 162, 12, 44, 17, 137, 122, 112, 10, 116, 129, 192, 129, 26, 16, 161, 6, 68, 24, 70, 48, 96, 33, 127, 177, 30, 166, 164, 45, 12, 9, 175, 32, 165, 41, 1, 1, 106, 10, 37, 38, 31, 30, 6, 97, 59, 56, 79, 71, 109, 111, 68, 6, 155, 73, 28, 26, 17, 8, 4, 38, 20, 28, 79, 43, 13, 1, 60, 61, 73, 21, 21, 78, 60, 46, 16, 9, 2, 17, 26, 90, 29, 38, 11, 42, 4, 4, 70, 16, 3, 5, 27, 10, 29, 6, 16, 1, 26, 3, 24, 3, 13, 3, 3, 6, 2, 14, 21, 13, 5, 1, 4, 6, 1, 6, 3, 12, 2, 16, 4, 35, 10, 4, 4, 8, 6, 31, 8, 5, 5, 3, 6, 9, 98, 4, 13, 9, 8, 6, 10, 12, 2, 9, 7, 15, 17, 5, 5, 2, 19, 16, 11, 3, 8, 5, 4, 1, 7, 2, 1, 4, 21, 5, 3, 21, 11, 6, 7, 6, 13, 2, 5, 4, 1, 9, 11, 1, 1, 2, 6, 12, 3, 5, 3, 2, 3, 4, 7, 5, 2, 11, 1, 3, 3, 1, 5, 5, 1, 2, 1, 3, 3, 3, 1, 3, 2, 1, 1, 1, 6, 4, 1, 1, 3, 1, 2, 7, 3, 1, 1, 4, 1, 1, 1, 2, 2, 2, 2, 1, 2, 4, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
o=np.argsort(xx)
x,y=[],[]
h=0
for i in o:
    if 6000>xx[i]>=60:
        x.append(xx[i])
        y.append(yy[i])
print(h)
x_data=[]
y_data=[]
for i in x:
    x_data.append((i-min(x))/(max(x)-min(x)))
for i in y:
    y_data.append((i-min(y))/(max(y)-min(y)))
plt.scatter(x_data, y_data)
plt.show()
model = Sequential()

# 在模型中添加一个全连接层
# 神经网络结构：1-10-1，即输入层为1个神经元，隐藏层10个神经元，输出层1个神经元。

# 激活函数加法1
model.add(Dense(units=50, input_dim=1))
model.add(Activation('tanh'))
model.add(Dense(units=1))
model.add(Activation('tanh'))

# 激活函数加法2
# model.add(Dense(units=10, input_dim=1, activation='relu'))
# model.add(Dense(units=1, activation='relu'))


# 定义优化算法
sgd = SGD(lr=0.3)
# sgd: Stochastic gradient descent,随机梯度下降法
# mse: Mean Squared Error, 均方误差
model.compile(optimizer=sgd, loss='mse')

# 进行训练
for step in range(3001):
    # 每次训练一个批次
    cost = model.train_on_batch(x_data, y_data)
    # 每500个batch打印一次cost值
    if step % 500 == 0:
        print('cost: ', cost)
# 打印权值和偏置值
W, b = model.layers[0].get_weights()
print('W：', W, ' b: ', b)
W, b = model.layers[2].get_weights()
print('W：', W, ' b: ', b)
print(len(model.layers))

# 把x_data输入网络中，得到预测值y_pred
y_pred = model.predict(x_data)
print(y_pred)
# 显示随机点
plt.scatter(x_data, y_data)
# 显示预测结果
# plt.scatter(x_data, y_pred,'r-')
plt.plot(x_data, y_pred, 'r-')
plt.show()
