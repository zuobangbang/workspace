import csv

from numpy import *
import pandas as pd
import xlrd
def read_data():
    #修改
    trainpath = '/Users/zuobangbang/Desktop/query_result.csv'
    data=pd.read_csv(trainpath,encoding='utf-8')
    shop={}
    for i in zip(data['shopId'],data['location']):
        shop[i[0]]=[float(i[1].split(',')[0]),float(i[1].split(',')[1])]
    return shop
def hot_zone(leibie):
    leibie_num = {}
    r = 0
    for key,value in leibie.items():
        if not leibie_num.__contains__(value):
            leibie_num[value] = 1
        else:
            leibie_num[value] += 1
    print("每个类别的商铺数leibie_num：", leibie_num)
    s = []
    shopn = 0
    for key, value in leibie_num.items():
        if value > 2:
            r += 1
            s.append(key)
    print("活跃区域总数:", len(s))
    print("活跃区域list(s):",s)
    return s,leibie_num
def recommende_shop(leibie):
    idlist = [100453783, 100454459, 101621807, 101820969, 101916663, 101919721, 102025303, 102079962, 102120867,
              102171985, 102202865, 102279861, 102283458, 102294773, 102321469, 102346311, 102357477, 102399432,
              102399776, 102494284, 102495970, 102512139, 102626481, 102711013, 103016391, 103018255, 103168180,
              103550032, 103591768, 103626011, 103631099, 103643369, 104638839, 104962008, 10655604, 10668125,
              107196565, 107701425, 107741862, 107781997, 107988665, 108168070, 108173485, 108188590, 108189448,
              108287945, 108328538, 108350649, 110257607, 110268453, 110334557, 110380037, 110386836, 110437713,
              110450484, 110452484, 110499920, 110570004, 110620088, 110667967, 110789043, 110798100, 110802594,
              110813220, 110868041, 110951828, 111635859, 111770621, 111801834, 111868220, 112009096, 112110778,
              112243239, 112269549, 112313947, 112317314, 112487757, 112546105, 112601331, 112612937, 112649266,
              112714470, 113121992, 113126159, 113135742, 113137681, 113138577, 113183574, 113889669, 113899618,
              113899841, 113947292, 114846114, 114906055, 1150108220, 11576230, 11581298, 120032733, 120059064,
              120062169, 120082918, 120111672, 120157313, 121483445, 121490360, 121524825, 121551990, 121881461,
              121901040, 122224421, 122313070, 122794430, 122917425, 123138221, 123589756, 123679350, 123924025,
              124221343, 124296913, 124318425, 124412901, 124533272, 125289377, 125310015, 125956868, 126097061,
              126163069, 126241282, 126675019, 126838254, 127000644, 127099353, 127141897, 127280908, 127545103,
              127591426, 127637127, 127637150, 127646794, 127656878, 127678580, 127787197, 127800403, 127830312,
              128015929, 128115831, 128407685, 128485571, 128928156, 129182940, 129219481, 129228838, 129320927,
              129390270, 129423070, 129791469, 129938721, 130173060, 130247390, 130326468, 130352523, 130404172,
              130572288, 130612319, 130658108, 130752603, 130881273, 130890991, 131016653, 131068858, 131388739,
              131451288, 131464175, 131513201, 131547728, 131745522, 131948945, 132306339, 132843198, 132876555,
              132994844, 13747098, 13774913, 13794236, 13801625, 13854749, 13855939, 13858563, 13894596, 13934323,
              13934329, 14155632, 14179668, 14193946, 14652437, 14710454, 14716346, 14729784, 14739401, 14898581,
              15114142, 15118924, 15121804, 15130020, 15130820, 15949318, 15950071, 15950298, 15959040, 15969168,
              15969229, 16005270, 16005282, 16723134, 16812153, 16960273, 16973798, 16993089, 17152814, 17169347,
              17169769, 17193285, 17224894, 17666530, 17684367, 17709428, 17783467, 17946698, 17950259, 18007649,
              18061581, 18063565, 18134486, 18146141, 18222526, 18253826, 18254408, 18285870, 18314686, 18388196,
              18532570, 18592346, 18593390, 18596173, 18605554, 18657509, 18667844, 18696840, 18717342, 1888831,
              18972108, 18988882, 18997579, 19002958, 19010893, 19106046, 1910962, 19110379, 19127422, 19131842,
              1918309, 19194431, 19199522, 19215178, 19291584, 19317514, 19354697, 19361652, 1940182, 19413661,
              19431514, 19432177, 1945453, 19495435, 19566195, 19566231, 19566235, 19566263, 19566270, 19566292,
              19572795, 19586160, 19624136, 19632493, 1965808, 1966510, 1966930, 19807576, 19813601, 19829104, 1998637,
              2000602, 2002222, 2014480, 2015302, 2036461, 2045368, 2045743, 2061046, 2066743, 20673469, 20706236,
              20721849, 20726035, 2081218, 20875703, 20884827, 20885130, 2092879, 20933837, 2094517, 2102164, 21040337,
              2121037, 2123752, 21252959, 21253779, 21317661, 21332765, 21366540, 2137558, 21396703, 21408649, 21557896,
              21564455, 21564719, 21627628, 21627816, 21634707, 21663488, 21745592, 21751402, 21809124, 21823246,
              21980158, 2198290, 22161642, 22190670, 22199862, 22205328, 22205369, 22213343, 2226832, 22298289,
              22303234, 22395765, 2247412, 22497342, 2252542, 2257381, 22574666, 22580872, 22591339, 2259997, 2262031,
              2263312, 22807198, 22828230, 22829416, 22872921, 22900488, 22917034, 2292337, 23041450, 23064111,
              23078746, 23094417, 23102460, 2317615, 23192218, 2344609, 2354914, 23675156, 23683460, 23721799, 23749512,
              2379733, 2380051, 23939502, 23999159, 24025076, 24046907, 2404885, 24060915, 24078718, 2414731, 24311160,
              24335353, 2433727, 24653459, 24656059, 24725199, 24803348, 24879665, 2489347, 2490988, 24931575, 24944446,
              2503105, 2517862, 2517958, 2519965, 2523199, 2563573, 2577160, 2598136, 2602468, 2608822, 26232653,
              2644225, 2655271, 2670223, 2672002, 26952870, 27082688, 27169320, 27187664, 27269321, 27275925, 27302071,
              27306438, 27319274, 27337113, 2737519, 27488995, 27497049, 27516109, 27544927, 2758351, 2758354, 2776777,
              2780689, 2819488, 28594862, 28625041, 28625240, 2863447, 2875369, 2904457, 2922115, 2980507, 2992372,
              3005725, 3096880, 3130108, 3178141, 3184876, 3190462, 3200725, 3218962, 32316491, 32424618, 32476629,
              32504471, 32526622, 32561805, 32638589, 32675734, 32751901, 3286576, 32874639, 32883573, 3294250, 3297139,
              3304702, 3307297, 33577814, 33589283, 3360673, 3362413, 3370009, 3375865, 3430600, 3444637, 3458230,
              3462271, 3500047, 3511480, 3516520, 3530335, 3553117, 3556441, 3580258, 3596389, 3639256, 3644320,
              3648196, 3650407, 3658510, 37793503, 37794812, 37928249, 37934515, 38315762, 38319926, 38331732, 3894895,
              3899110, 3899125, 39867976, 3991009, 4040326, 4060378, 4060414, 4061470, 4082899, 40899201, 4103440,
              4104023, 4125831, 4129101, 4175269, 4177150, 41823278, 4183553, 4187909, 4189534, 4211648, 4222110,
              4223189, 4270935, 4271812, 4284987, 4285670, 4297373, 43604128, 43608110, 43624375, 44229350, 4512919,
              4526681, 4527051, 4543652, 45675667, 45821597, 45991106, 4599798, 4657406, 4683333, 4694415, 4697793,
              4717636, 4719368, 4729819, 4733852, 4736393, 4738479, 4744328, 48051668, 48063510, 48144290, 48233624,
              4833921, 48388649, 48496933, 50482745, 50633295, 507571, 507602, 507625, 507628, 507640, 50772121,
              50773874, 507753, 507754, 507819, 507896, 507983, 507991, 508127, 508194, 508234, 508257, 508266, 508386,
              508533, 508715, 508781, 508879, 508917, 508922, 509079, 509080, 509498, 509825, 509886, 509952, 510018,
              510275, 510286, 510335, 510372, 510414, 510423, 510430, 510666, 510689, 510724, 510727, 510773, 510776,
              510835, 510874, 511008, 511065, 511180, 511463, 511464, 511607, 511658, 511747, 511751, 511754, 511804,
              511945, 512255, 512280, 512315, 512804, 513020, 513030, 513106, 513225, 513297, 5134711, 513501, 513502,
              513545, 513567, 5135763, 5136742, 513753, 514314, 51439428, 514435, 514524, 514537, 514659, 514688,
              514730, 5155946, 515839, 5161065, 516143, 516433, 516461, 516581, 5191845, 5203912, 5208730, 5213409,
              5227166, 5242871, 5256897, 5258529, 5268322, 5287391, 5293653, 5297930, 5308331, 5321483, 5331413,
              5338201, 5343663, 5353768, 5355402, 5376222, 54029877, 5409921, 5423552, 5457431, 5466729, 5480495,
              5480886, 5491143, 5506360, 5512894, 5515805, 5528326, 5536936, 5542008, 55655184, 5568696, 5578980,
              5611317, 5623067, 562815, 5628167, 56430056, 56500762, 565213, 56535841, 565878, 56777730, 56813962,
              5687064, 5694878, 5702355, 5702926, 5714662, 571590, 572232, 57229440, 57229964, 57325328, 57471962,
              57488410, 57571833, 57579654, 57621374, 57651191, 57809182, 57818975, 57838811, 579306, 57965997, 580295,
              581083, 581652, 581653, 582523, 582526, 583210, 58331960, 583581, 58385229, 585341, 5861588, 58918986,
              59194617, 59426260, 59426313, 5989039, 6018235, 6026269, 6043350, 60664990, 6088238, 6116076, 6189132,
              6197781, 6232012, 6243039, 63052564, 63056782, 6311110, 6439092, 6444482, 6447905, 6455382, 65480908,
              65554487, 65600778, 6587521, 65965897, 65994332, 66024751, 66148325, 66190530, 66280410, 66305353,
              66380839, 66461809, 66511894, 66542360, 66586585, 66629901, 66804727, 66866682, 66871244, 66879520,
              66915769, 67007549, 67084910, 67126408, 67226433, 67291092, 67304433, 67317373, 67406887, 67429751,
              67475494, 67545669, 67558201, 6755894, 67625849, 67630463, 67640926, 67661388, 67674959, 67690207,
              67692043, 67712140, 67749677, 67752850, 67814811, 67872247, 67873641, 67884848, 67892798, 67948013,
              68042615, 68051240, 68076488, 68111902, 68123873, 68143991, 68221776, 68939365, 68944264, 68990490,
              69012294, 69033034, 69043607, 69091499, 69103795, 69103970, 69155332, 69202289, 69266045, 69277122,
              69320984, 69350089, 69448501, 69511514, 69613712, 69620160, 69622782, 69623010, 69691006, 69735355,
              69737658, 69792707, 69869132, 69877554, 69925746, 69948831, 69958473, 69999354, 70192497, 70232987,
              7037757, 71001917, 72341850, 72457842, 72476499, 73407942, 73408273, 74570212, 74618293, 74620765,
              75006666, 75124691, 75130273, 75149412, 75150765, 75157539, 75186951, 75190419, 75642184, 76301755,
              76319240, 76755021, 76844156, 76855021, 76879148, 76907072, 76936059, 76973215, 76983631, 76999574,
              77235601, 77283315, 77301858, 77312537, 77337042, 77492199, 78016158, 79045486, 79220875, 79260787,
              79264249, 79277997, 79560921, 79562355, 79611255, 79706429, 8008917, 8010354, 8022176, 8022988, 8028071,
              8054232, 80548332, 8072093, 8076066, 82687676, 83470046, 83471892, 83491248, 83502911, 83503229, 83526375,
              83538920, 83619678, 8433218, 8628149, 8645942, 8721642, 8780737, 8824749, 8838675, 8848166, 8853291,
              8858308, 8878037, 8901673, 8924161, 8941116, 8991486, 8991492, 8991552, 90016182, 90031400, 90041050,
              90055368, 90066899, 90094326, 9019144, 9019417, 90296923, 90327602, 90336777, 90338630, 90345543,
              90352562, 9036967, 90377513, 90391372, 90402103, 90404278, 90426626, 90469911, 90476770, 90487892,
              90566859, 90572280, 9067751, 9080160, 90889845, 90923921, 90938139, 90975544, 90977533, 90978288,
              90986715, 91028621, 91073709, 91600835, 9163377, 91869126, 91904443, 91946821, 91981592, 92024826,
              92026877, 92039226, 92066345, 92110818, 92126659, 92158183, 92265174, 92291095, 92341376, 92343292,
              92372277, 92375638, 92391961, 92405176, 92407485, 92458696, 92519273, 92539156, 92570348, 92583451,
              92605418, 92614517, 92619822, 92620280, 92620431, 92621974, 92678505, 92680218, 92680250, 92741665,
              92757430, 92823735, 92837894, 92838994, 92844563, 92921801, 92993418, 92997651, 93033106, 93070776,
              9314939, 93171285, 93214355, 93322246, 93358394, 93442309, 93492419, 93495209, 93527231, 93529246,
              93596124, 93596778, 93623093, 93634875, 93659299, 93708987, 9384554, 93911568, 93916160, 93936145,
              93996675, 94005984, 94014480, 94033286, 94033444, 94776821, 95020894, 95036908, 95062129, 95074332,
              95085121, 95249577, 95252979, 95535897, 95538260, 9561123, 95798819, 95868774, 95873615, 95873632,
              95891220, 95936576, 95985322, 96012626, 96062595, 96124333, 96125614, 96198119, 96211900, 96244950,
              96293540, 96293848, 96294204, 96300666, 96314887, 96322552, 96386652, 96387295, 96399001, 96438299,
              96441483, 96452489, 96572866, 96577736, 96604596, 96637718, 96640693, 96677684, 96691869, 9679454,
              96985877, 97120811, 97127407, 97232112, 97254115, 97255778, 97296698, 97338680, 97430894, 97433853,
              97474936, 9749477, 97542940, 97588558, 97655325, 97661167, 97674093, 97676165, 97691789, 97759590,
              97826366, 97852945, 97868963, 97883833, 97884155, 97884232, 97930304, 97931406, 97942410, 97968688,
              97977684, 98017248, 98078343, 981218789, 98130497, 98191488, 98211348, 98274171, 98274177, 98360560,
              98361390, 98376873, 98390953, 98399550, 98658939, 98708761, 98741597, 98808204, 98815074, 98862791,
              98942851, 99104473, 99120746, 99587673, 9988226, 99887406]
    result={}
    for i in idlist:
        result[i]=leibie[i]
    print("被推荐商铺隶属类别result：",result)
    return result


def center(q,shop_dict):
    shop_num={}
    for i in q:
        if not shop_num.__contains__(i):
            shop_num[i]=1
        else:shop_num[i]+=1
    print("每个商铺的签到数shop_num：",shop_num)
    shop=sorted(shop_num.items(),key=lambda x:x[1],reverse=True)
    id = []
    for i in shop:
        id.append(i[0])
    k = 1
    leibie={}
    while len(id):
        #维度
        d=id[0]
        lat=shop_dict[d][1]
        #经度
        lon=shop_dict[d][0]
        leibie[d]=k
        id.remove(d)
        w=[]
        for i in id:
            lat1 = shop_dict[i][1]
            lon1 = shop_dict[i][0]
            if juli(lat,lon,lat1,lon1)<=3:
                w.append(i)
                leibie[i]=k
        for i in w:
            id.remove(i)
        k+=1
    print("一共有",k,"个簇心")
    print("所有商铺的隶属类别leibie：",leibie)
    return leibie,shop_num
def Merge(dict1, dict2):
    res = {**dict1, **dict2}
    return res
def shop_uesr():
    shop_dict={}
    # 修改
    trainpath = '/Users/zuobangbang/Desktop/shopid_location.xlsx'
    file = xlrd.open_workbook(trainpath)
    # 修改。看你那个sheet叫啥
    sheet = file.sheet_by_name('Sheet2')
    rownums = sheet.nrows
    colnums = sheet.ncols
    print(rownums)
    for i in range(1,rownums):
        shop_dict[int(sheet.cell_value(i,0))] = [float(sheet.cell_value(i,1).split(',')[0]), float(sheet.cell_value(i,1).split(',')[1])]
    print("shop_dict:",shop_dict)
    # 修改
    trainpath = '/Users/zuobangbang/Desktop/shopid_userid.csv'
    data = pd.read_csv(trainpath)
    # print(data.shape)
    q=list(data['shopid'])
    leibie,shop_num=center(q,shop_dict)
    result=recommende_shop(leibie)
    s, leibie_num=hot_zone(leibie)
    hotzone_qiandao={}
    nothotzone_qiandao={}
    # 修改
    trainpath = '/Users/zuobangbang/Desktop/score_mat.csv'
    data = pd.read_csv(trainpath)
    users = list(data.columns)[1:]
    h=list(data['shopId'])
    for i in range(len(h)):
        u=0
        for k in users:
            if not math.isnan(data[i:i+1][k]):
                u+=1
        if leibie[h[i]] in s:
            if not hotzone_qiandao.__contains__(leibie[h[i]]):
                hotzone_qiandao[leibie[h[i]]]=u
            else:hotzone_qiandao[leibie[h[i]]]+=u
        else:
            if not nothotzone_qiandao.__contains__(leibie[h[i]]):
                nothotzone_qiandao[leibie[h[i]]]=u
            else:nothotzone_qiandao[leibie[h[i]]]+=u
    print("hotzone_qiandao:",hotzone_qiandao)
    print("活跃区域签到总数：",sum(list(value for key,value in hotzone_qiandao.items())))
    print("nothotzone_qiandao:", nothotzone_qiandao)
    print("非活跃区域签到总数：", sum(list(value for key, value in nothotzone_qiandao.items())))
    return result,hotzone_qiandao,nothotzone_qiandao,s,leibie_num,shop_dict,shop_num
def recommend(result,hotzone_qiandao,nothotzone_qiandao,shop_dict,shop_num,visited_shop,idlist,topn,scoree):
    score={}
    all=sum(list(hotzone_qiandao.values()))+sum(list(nothotzone_qiandao.values()))
    for id in idlist:
        if not id in visited_shop:
            score[id]=0.0
    # s=0
    vaule_dict={}
    for key,value in visited_shop.items():
        for id in idlist:
            if not id in visited_shop:
                # s+=value
                if not vaule_dict.__contains__(id):
                    vaule_dict[id]=value
                else:
                    vaule_dict[id] += value
                if result[id] in hotzone_qiandao:
                    i=juli(shop_dict[id][1],shop_dict[id][0],shop_dict[key][1],shop_dict[key][0])
                    score[id]+=value*juli(shop_dict[id][1],shop_dict[id][0],shop_dict[key][1],shop_dict[key][0])*float(hotzone_qiandao[result[id]]/all)
                else:
                    score[id]+=value*juli(shop_dict[id][1],shop_dict[id][0],shop_dict[key][1],shop_dict[key][0])*float(shop_num[id]/all)

    for key,value in score.items():
        score[key]=value/vaule_dict[key]
    g=sorted(score.items(),key=lambda x:x[1],reverse=True)
    t = sorted(scoree.items(), key=lambda x: x[1], reverse=True)
    for key,value in score.items():
        score[key]=(value-g[-1][1])/(g[0][1]-g[-1][1])*t[0][1]
    gg=[]
    for i in g[:topn]:
        gg.append([i[0],score[i[0]]])
    print(gg)
    all_score = Merge(score, scoree)
    return gg,score,all_score

def recommend_system(result,hotzone_qiandao,nothotzone_qiandao,shop_dict,shop_num):
    # 修改
    trainpath = '/Users/zuobangbang/Desktop/score_mat.csv'
    data = pd.read_csv(trainpath)
    users = list(data.columns)[1:]
    # 修改你需要推荐的个数
    topn=5
    # 修改
    file = '/Users/zuobangbang/Desktop/dili_result.csv'
    file = open(file, 'w')
    x = csv.writer(file)
    x.writerow(['用户id', '推荐餐厅'])
    # 修改
    nfile='/Users/zuobangbang/Desktop/dili_matrix.csv'
    nfile = open(nfile, 'w')
    y = csv.writer(nfile)
    c = ['用户id']
    idlist=[100453783, 100454459, 101621807, 101820969, 101916663, 101919721, 102025303, 102079962, 102120867, 102171985, 102202865, 102279861, 102283458, 102294773, 102321469, 102346311, 102357477, 102399432, 102399776, 102494284, 102495970, 102512139, 102626481, 102711013, 103016391, 103018255, 103168180, 103550032, 103591768, 103626011, 103631099, 103643369, 104638839, 104962008, 10655604, 10668125, 107196565, 107701425, 107741862, 107781997, 107988665, 108168070, 108173485, 108188590, 108189448, 108287945, 108328538, 108350649, 110257607, 110268453, 110334557, 110380037, 110386836, 110437713, 110450484, 110452484, 110499920, 110570004, 110620088, 110667967, 110789043, 110798100, 110802594, 110813220, 110868041, 110951828, 111635859, 111770621, 111801834, 111868220, 112009096, 112110778, 112243239, 112269549, 112313947, 112317314, 112487757, 112546105, 112601331, 112612937, 112649266, 112714470, 113121992, 113126159, 113135742, 113137681, 113138577, 113183574, 113889669, 113899618, 113899841, 113947292, 114846114, 114906055, 1150108220, 11576230, 11581298, 120032733, 120059064, 120062169, 120082918, 120111672, 120157313, 121483445, 121490360, 121524825, 121551990, 121881461, 121901040, 122224421, 122313070, 122794430, 122917425, 123138221, 123589756, 123679350, 123924025, 124221343, 124296913, 124318425, 124412901, 124533272, 125289377, 125310015, 125956868, 126097061, 126163069, 126241282, 126675019, 126838254, 127000644, 127099353, 127141897, 127280908, 127545103, 127591426, 127637127, 127637150, 127646794, 127656878, 127678580, 127787197, 127800403, 127830312, 128015929, 128115831, 128407685, 128485571, 128928156, 129182940, 129219481, 129228838, 129320927, 129390270, 129423070, 129791469, 129938721, 130173060, 130247390, 130326468, 130352523, 130404172, 130572288, 130612319, 130658108, 130752603, 130881273, 130890991, 131016653, 131068858, 131388739, 131451288, 131464175, 131513201, 131547728, 131745522, 131948945, 132306339, 132843198, 132876555, 132994844, 13747098, 13774913, 13794236, 13801625, 13854749, 13855939, 13858563, 13894596, 13934323, 13934329, 14155632, 14179668, 14193946, 14652437, 14710454, 14716346, 14729784, 14739401, 14898581, 15114142, 15118924, 15121804, 15130020, 15130820, 15949318, 15950071, 15950298, 15959040, 15969168, 15969229, 16005270, 16005282, 16723134, 16812153, 16960273, 16973798, 16993089, 17152814, 17169347, 17169769, 17193285, 17224894, 17666530, 17684367, 17709428, 17783467, 17946698, 17950259, 18007649, 18061581, 18063565, 18134486, 18146141, 18222526, 18253826, 18254408, 18285870, 18314686, 18388196, 18532570, 18592346, 18593390, 18596173, 18605554, 18657509, 18667844, 18696840, 18717342, 1888831, 18972108, 18988882, 18997579, 19002958, 19010893, 19106046, 1910962, 19110379, 19127422, 19131842, 1918309, 19194431, 19199522, 19215178, 19291584, 19317514, 19354697, 19361652, 1940182, 19413661, 19431514, 19432177, 1945453, 19495435, 19566195, 19566231, 19566235, 19566263, 19566270, 19566292, 19572795, 19586160, 19624136, 19632493, 1965808, 1966510, 1966930, 19807576, 19813601, 19829104, 1998637, 2000602, 2002222, 2014480, 2015302, 2036461, 2045368, 2045743, 2061046, 2066743, 20673469, 20706236, 20721849, 20726035, 2081218, 20875703, 20884827, 20885130, 2092879, 20933837, 2094517, 2102164, 21040337, 2121037, 2123752, 21252959, 21253779, 21317661, 21332765, 21366540, 2137558, 21396703, 21408649, 21557896, 21564455, 21564719, 21627628, 21627816, 21634707, 21663488, 21745592, 21751402, 21809124, 21823246, 21980158, 2198290, 22161642, 22190670, 22199862, 22205328, 22205369, 22213343, 2226832, 22298289, 22303234, 22395765, 2247412, 22497342, 2252542, 2257381, 22574666, 22580872, 22591339, 2259997, 2262031, 2263312, 22807198, 22828230, 22829416, 22872921, 22900488, 22917034, 2292337, 23041450, 23064111, 23078746, 23094417, 23102460, 2317615, 23192218, 2344609, 2354914, 23675156, 23683460, 23721799, 23749512, 2379733, 2380051, 23939502, 23999159, 24025076, 24046907, 2404885, 24060915, 24078718, 2414731, 24311160, 24335353, 2433727, 24653459, 24656059, 24725199, 24803348, 24879665, 2489347, 2490988, 24931575, 24944446, 2503105, 2517862, 2517958, 2519965, 2523199, 2563573, 2577160, 2598136, 2602468, 2608822, 26232653, 2644225, 2655271, 2670223, 2672002, 26952870, 27082688, 27169320, 27187664, 27269321, 27275925, 27302071, 27306438, 27319274, 27337113, 2737519, 27488995, 27497049, 27516109, 27544927, 2758351, 2758354, 2776777, 2780689, 2819488, 28594862, 28625041, 28625240, 2863447, 2875369, 2904457, 2922115, 2980507, 2992372, 3005725, 3096880, 3130108, 3178141, 3184876, 3190462, 3200725, 3218962, 32316491, 32424618, 32476629, 32504471, 32526622, 32561805, 32638589, 32675734, 32751901, 3286576, 32874639, 32883573, 3294250, 3297139, 3304702, 3307297, 33577814, 33589283, 3360673, 3362413, 3370009, 3375865, 3430600, 3444637, 3458230, 3462271, 3500047, 3511480, 3516520, 3530335, 3553117, 3556441, 3580258, 3596389, 3639256, 3644320, 3648196, 3650407, 3658510, 37793503, 37794812, 37928249, 37934515, 38315762, 38319926, 38331732, 3894895, 3899110, 3899125, 39867976, 3991009, 4040326, 4060378, 4060414, 4061470, 4082899, 40899201, 4103440, 4104023, 4125831, 4129101, 4175269, 4177150, 41823278, 4183553, 4187909, 4189534, 4211648, 4222110, 4223189, 4270935, 4271812, 4284987, 4285670, 4297373, 43604128, 43608110, 43624375, 44229350, 4512919, 4526681, 4527051, 4543652, 45675667, 45821597, 45991106, 4599798, 4657406, 4683333, 4694415, 4697793, 4717636, 4719368, 4729819, 4733852, 4736393, 4738479, 4744328, 48051668, 48063510, 48144290, 48233624, 4833921, 48388649, 48496933, 50482745, 50633295, 507571, 507602, 507625, 507628, 507640, 50772121, 50773874, 507753, 507754, 507819, 507896, 507983, 507991, 508127, 508194, 508234, 508257, 508266, 508386, 508533, 508715, 508781, 508879, 508917, 508922, 509079, 509080, 509498, 509825, 509886, 509952, 510018, 510275, 510286, 510335, 510372, 510414, 510423, 510430, 510666, 510689, 510724, 510727, 510773, 510776, 510835, 510874, 511008, 511065, 511180, 511463, 511464, 511607, 511658, 511747, 511751, 511754, 511804, 511945, 512255, 512280, 512315, 512804, 513020, 513030, 513106, 513225, 513297, 5134711, 513501, 513502, 513545, 513567, 5135763, 5136742, 513753, 514314, 51439428, 514435, 514524, 514537, 514659, 514688, 514730, 5155946, 515839, 5161065, 516143, 516433, 516461, 516581, 5191845, 5203912, 5208730, 5213409, 5227166, 5242871, 5256897, 5258529, 5268322, 5287391, 5293653, 5297930, 5308331, 5321483, 5331413, 5338201, 5343663, 5353768, 5355402, 5376222, 54029877, 5409921, 5423552, 5457431, 5466729, 5480495, 5480886, 5491143, 5506360, 5512894, 5515805, 5528326, 5536936, 5542008, 55655184, 5568696, 5578980, 5611317, 5623067, 562815, 5628167, 56430056, 56500762, 565213, 56535841, 565878, 56777730, 56813962, 5687064, 5694878, 5702355, 5702926, 5714662, 571590, 572232, 57229440, 57229964, 57325328, 57471962, 57488410, 57571833, 57579654, 57621374, 57651191, 57809182, 57818975, 57838811, 579306, 57965997, 580295, 581083, 581652, 581653, 582523, 582526, 583210, 58331960, 583581, 58385229, 585341, 5861588, 58918986, 59194617, 59426260, 59426313, 5989039, 6018235, 6026269, 6043350, 60664990, 6088238, 6116076, 6189132, 6197781, 6232012, 6243039, 63052564, 63056782, 6311110, 6439092, 6444482, 6447905, 6455382, 65480908, 65554487, 65600778, 6587521, 65965897, 65994332, 66024751, 66148325, 66190530, 66280410, 66305353, 66380839, 66461809, 66511894, 66542360, 66586585, 66629901, 66804727, 66866682, 66871244, 66879520, 66915769, 67007549, 67084910, 67126408, 67226433, 67291092, 67304433, 67317373, 67406887, 67429751, 67475494, 67545669, 67558201, 6755894, 67625849, 67630463, 67640926, 67661388, 67674959, 67690207, 67692043, 67712140, 67749677, 67752850, 67814811, 67872247, 67873641, 67884848, 67892798, 67948013, 68042615, 68051240, 68076488, 68111902, 68123873, 68143991, 68221776, 68939365, 68944264, 68990490, 69012294, 69033034, 69043607, 69091499, 69103795, 69103970, 69155332, 69202289, 69266045, 69277122, 69320984, 69350089, 69448501, 69511514, 69613712, 69620160, 69622782, 69623010, 69691006, 69735355, 69737658, 69792707, 69869132, 69877554, 69925746, 69948831, 69958473, 69999354, 70192497, 70232987, 7037757, 71001917, 72341850, 72457842, 72476499, 73407942, 73408273, 74570212, 74618293, 74620765, 75006666, 75124691, 75130273, 75149412, 75150765, 75157539, 75186951, 75190419, 75642184, 76301755, 76319240, 76755021, 76844156, 76855021, 76879148, 76907072, 76936059, 76973215, 76983631, 76999574, 77235601, 77283315, 77301858, 77312537, 77337042, 77492199, 78016158, 79045486, 79220875, 79260787, 79264249, 79277997, 79560921, 79562355, 79611255, 79706429, 8008917, 8010354, 8022176, 8022988, 8028071, 8054232, 80548332, 8072093, 8076066, 82687676, 83470046, 83471892, 83491248, 83502911, 83503229, 83526375, 83538920, 83619678, 8433218, 8628149, 8645942, 8721642, 8780737, 8824749, 8838675, 8848166, 8853291, 8858308, 8878037, 8901673, 8924161, 8941116, 8991486, 8991492, 8991552, 90016182, 90031400, 90041050, 90055368, 90066899, 90094326, 9019144, 9019417, 90296923, 90327602, 90336777, 90338630, 90345543, 90352562, 9036967, 90377513, 90391372, 90402103, 90404278, 90426626, 90469911, 90476770, 90487892, 90566859, 90572280, 9067751, 9080160, 90889845, 90923921, 90938139, 90975544, 90977533, 90978288, 90986715, 91028621, 91073709, 91600835, 9163377, 91869126, 91904443, 91946821, 91981592, 92024826, 92026877, 92039226, 92066345, 92110818, 92126659, 92158183, 92265174, 92291095, 92341376, 92343292, 92372277, 92375638, 92391961, 92405176, 92407485, 92458696, 92519273, 92539156, 92570348, 92583451, 92605418, 92614517, 92619822, 92620280, 92620431, 92621974, 92678505, 92680218, 92680250, 92741665, 92757430, 92823735, 92837894, 92838994, 92844563, 92921801, 92993418, 92997651, 93033106, 93070776, 9314939, 93171285, 93214355, 93322246, 93358394, 93442309, 93492419, 93495209, 93527231, 93529246, 93596124, 93596778, 93623093, 93634875, 93659299, 93708987, 9384554, 93911568, 93916160, 93936145, 93996675, 94005984, 94014480, 94033286, 94033444, 94776821, 95020894, 95036908, 95062129, 95074332, 95085121, 95249577, 95252979, 95535897, 95538260, 9561123, 95798819, 95868774, 95873615, 95873632, 95891220, 95936576, 95985322, 96012626, 96062595, 96124333, 96125614, 96198119, 96211900, 96244950, 96293540, 96293848, 96294204, 96300666, 96314887, 96322552, 96386652, 96387295, 96399001, 96438299, 96441483, 96452489, 96572866, 96577736, 96604596, 96637718, 96640693, 96677684, 96691869, 9679454, 96985877, 97120811, 97127407, 97232112, 97254115, 97255778, 97296698, 97338680, 97430894, 97433853, 97474936, 9749477, 97542940, 97588558, 97655325, 97661167, 97674093, 97676165, 97691789, 97759590, 97826366, 97852945, 97868963, 97883833, 97884155, 97884232, 97930304, 97931406, 97942410, 97968688, 97977684, 98017248, 98078343, 981218789, 98130497, 98191488, 98211348, 98274171, 98274177, 98360560, 98361390, 98376873, 98390953, 98399550, 98658939, 98708761, 98741597, 98808204, 98815074, 98862791, 98942851, 99104473, 99120746, 99587673, 9988226, 99887406]
    c.extend(idlist)
    y.writerow(c)
    for user in users:
        print(user)
        scoree={}
        shoplist=list(data[user])
        visited_shop={}
        for i in range(len(shoplist)):
            if not math.isnan(shoplist[i]):
                visited_shop[idlist[i]]=shoplist[i]
                scoree[idlist[i]]=shoplist[i]
        top_n, score, all_score=recommend(result,hotzone_qiandao,nothotzone_qiandao,shop_dict,shop_num,visited_shop,idlist,topn,scoree)
        d=[user]
        d.extend([i[0] for i in top_n])
        x.writerow(d)
        c= [user]
        for shop in idlist:
            c.append(all_score[shop])
        y.writerow(c)
    file.close()
    nfile.close()



def score():
    # 修改
    trainpath = '/Users/zuobangbang/Desktop/score_mat.csv'
    data = pd.read_csv(trainpath)
    user=list(data.columns)[1:]
    print(data.shape)
    qiandao={}
    idlist=[]
    for i in range(1,1133):
        id=data[i-1:i]['shopId']
        id=list(id)[0]
        idlist.append(id)
        e = 0
        for j in user:
            if not math.isnan(data[i-1:i][j]):
                e+=1
        qiandao[id]=e
    print(qiandao)
    print(idlist)
    return qiandao,idlist


def juli(lat1,lon1,lat2,lon2):
    lat1,lat2,lon1,lon2=map(math.radians,[lat1,lat2,lon1,lon2])
    a=math.sin((lat2-lat1)/2)
    b=math.sin((lon2-lon1)/2)
    c=math.sqrt(a*a+b*b*math.cos(lat1)*math.cos(lat2))
    #km
    return 2*math.asin(c)*6371



if __name__=='__main__':

    # shop_dict=read_data()
    # print(shop_dict)
    result,hotzone_qiandao,nothotzone_qiandao,s,leibie_num,shop_dict,shop_num=shop_uesr()

    recommend_system(result,hotzone_qiandao,nothotzone_qiandao,shop_dict,shop_num)

